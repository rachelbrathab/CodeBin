{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RACHEL BRATHAB\\\\Desktop\\\\CodeBinProject\\\\codebin-ui\\\\src\\\\components\\\\SnippetPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { Card, Spinner, Alert, Button, Container, ListGroup } from 'react-bootstrap';\n// Import useMonaco hook\nimport Editor, { useMonaco } from '@monaco-editor/react';\nimport { toast } from 'react-hot-toast';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { FaPlus, FaPlayCircle, FaCheckCircle, FaTimesCircle, FaCopy } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SnippetPage = ({\n  theme\n}) => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [snippet, setSnippet] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const editorRef = useRef(null);\n  // Get the monaco instance via hook\n  const monaco = useMonaco();\n  const [analysis, setAnalysis] = useState([]);\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n  useEffect(() => {\n    // ... (fetchSnippet logic remains the same)\n    const fetchSnippet = async () => {\n      try {\n        setLoading(true);\n        setError('');\n        const response = await axios.get(`http://localhost:5000/api/snippets/${id}`);\n        setSnippet(response.data);\n      } catch (err) {\n        var _err$response, _err$response$data;\n        setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Snippet not found.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchSnippet();\n  }, [id]);\n\n  // Store editor instance when mounted\n  function handleEditorDidMount(editor, _theMonacoInstance) {\n    editorRef.current = editor;\n    // We don't need to store the instance here anymore, useMonaco handles it\n  }\n\n  // --- Helper function to process analysis results ---\n  const processMarkers = (markers, isPython = false) => {\n    // Check monaco instance before accessing MarkerSeverity\n    const severityError = monaco ? monaco.MarkerSeverity.Error : 8; // Default severity if monaco is not ready\n\n    if (!markers || markers.length === 0) {\n      setAnalysis([{\n        type: 'success',\n        message: 'No errors or warnings found. This code looks clean!'\n      }]);\n    } else {\n      const formattedSuggestions = markers.map(marker => {\n        if (!isPython) {\n          var _marker$start;\n          // Format Monaco/TypeScript diagnostics\n          let customSuggestion = 'Review the error and your code logic.';\n          const messageText = typeof marker.messageText === 'string' ? marker.messageText : marker.message || \"\";\n          if (messageText.includes(\"';' expected\")) {/* ... */}\n          if (messageText.includes(\"is not defined\")) {/* ... */}\n          if (messageText.includes(\"Expected corresponding closing tag\")) {/* ... */}\n          if (messageText.includes(\"Cannot assign to\") && messageText.includes(\"constant\")) {\n            customSuggestion = `Suggestion: You declared this variable with 'const', which means it cannot be reassigned. Use 'let' instead if you need to change its value.`;\n          }\n          return {\n            type: marker.category === 1 || marker.severity === severityError ? 'danger' : 'warning',\n            line: marker.startLineNumber || (((_marker$start = marker.start) === null || _marker$start === void 0 ? void 0 : _marker$start.line) || 0) + 1,\n            message: messageText,\n            suggestion: customSuggestion\n          };\n        } else {\n          // Format Python errors\n          let customSuggestion = `Suggestion: ${marker.message}.`;\n          if (marker.message.includes(\"Invalid syntax\")) {/* ... */}\n          return {\n            type: 'danger',\n            line: marker.line,\n            message: marker.message,\n            suggestion: customSuggestion\n          };\n        }\n      });\n      setAnalysis(formattedSuggestions);\n    }\n    setIsAnalyzing(false);\n  };\n\n  // --- Final Analyze Function ---\n  const handleAnalyzeCode = async () => {\n    // **CRITICAL FIX**: Check if monaco instance from the hook is ready\n    if (!editorRef.current || !monaco) {\n      toast.error(\"Editor services are not ready yet. Please wait a moment and try again.\");\n      setIsAnalyzing(false); // Make sure button is re-enabled\n      return;\n    }\n    setIsAnalyzing(true);\n    setAnalysis([]);\n    const language = snippet.language;\n    const model = editorRef.current.getModel();\n    if (!model) {\n      setIsAnalyzing(false);\n      return;\n    }\n    const modelUri = model.uri;\n\n    // --- Python Analysis ---\n    if (language === 'python') {\n      try {\n        const response = await axios.post('http://localhost:5000/api/analyze/python', {\n          code: snippet.content\n        });\n        processMarkers(response.data, true);\n      } catch (err) {\n        setAnalysis([{\n          type: 'danger',\n          message: 'Error running Python analyzer on server.'\n        }]);\n        setIsAnalyzing(false);\n      }\n    }\n    // --- JavaScript/TypeScript Analysis ---\n    else if (language === 'javascript' || language === 'typescript') {\n      try {\n        const worker = await monaco.languages.typescript.getTypeScriptWorker();\n        const client = await worker(modelUri);\n        const diagnostics = await Promise.all([client.getSyntacticDiagnostics(modelUri.toString()), client.getSemanticDiagnostics(modelUri.toString())]);\n        const allDiagnostics = diagnostics.flat();\n\n        // Convert TS Diagnostic objects\n        const formattedMarkers = allDiagnostics.map(diag => {\n          const startPosition = model.getPositionAt(diag.start); // Get line/col from position\n          return {\n            startLineNumber: startPosition.lineNumber,\n            messageText: typeof diag.messageText === 'object' ? diag.messageText.messageText // Handle nested messageText\n            : diag.messageText,\n            category: diag.category,\n            severity: diag.category === 1 ? monaco.MarkerSeverity.Error : monaco.MarkerSeverity.Warning\n          };\n        });\n        processMarkers(formattedMarkers, false);\n      } catch (tsError) {\n        console.error(\"Error getting TS diagnostics:\", tsError);\n        // Fallback to getModelMarkers if worker fails\n        editorRef.current.focus();\n        setTimeout(() => {\n          const markers = monaco.editor.getModelMarkers({\n            resource: modelUri\n          });\n          processMarkers(markers, false);\n        }, 300);\n      }\n    }\n    // --- Fallback for HTML/CSS/Other ---\n    else {\n      editorRef.current.focus();\n      setTimeout(() => {\n        const markers = monaco.editor.getModelMarkers({\n          resource: modelUri\n        });\n        processMarkers(markers, false);\n      }, 300);\n    }\n  };\n  const onCopyCode = () => {\n    toast.success('Code copied to clipboard!');\n  };\n\n  // --- Loading and Error states ---\n  if (loading) {/* ... return spinner ... */}\n  if (error) {/* ... return error alert ... */}\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    className: \"mb-4\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      as: Link,\n      to: \"/\",\n      variant: \"secondary\",\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(FaPlus, {\n        className: \"me-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), \" Create New Snippet\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), snippet && /*#__PURE__*/_jsxDEV(Card, {\n      className: \"editor-card\",\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: [\"Language: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: snippet.language\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 23\n        }, this), \" | Created: \", new Date(snippet.createdAt).toLocaleString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: /*#__PURE__*/_jsxDEV(Editor, {\n          height: \"60vh\",\n          theme: theme === 'dark' ? 'vs-dark' : 'vs-light',\n          language: snippet.language,\n          value: snippet.content,\n          onMount: handleEditorDidMount // Keep this\n          ,\n          options: {\n            readOnly: true,\n            domReadOnly: true,\n            minimap: {\n              enabled: true\n            },\n            validate: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex align-items-center\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"success\",\n            onClick: handleAnalyzeCode,\n            className: \"py-2\",\n            disabled: isAnalyzing,\n            children: [isAnalyzing ? /*#__PURE__*/_jsxDEV(Spinner, {\n              as: \"span\",\n              animation: \"border\",\n              size: \"sm\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 35\n            }, this) : /*#__PURE__*/_jsxDEV(FaPlayCircle, {\n              className: \"me-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 92\n            }, this), \" Analyze Code\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CopyToClipboard, {\n            text: snippet.content,\n            onCopy: onCopyCode,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              className: \"ms-2 py-2\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(FaCopy, {\n                className: \"me-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 66\n              }, this), \" Copy Code \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this), analysis.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-4\",\n          children: \" /* ... ListGroup ... */ \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 39\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n};\n_s(SnippetPage, \"Q42XG/5RpqDHlsTpLwPuMxZWngg=\", false, function () {\n  return [useParams, useMonaco];\n});\n_c = SnippetPage;\nexport default SnippetPage;\nvar _c;\n$RefreshReg$(_c, \"SnippetPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","Link","axios","Card","Spinner","Alert","Button","Container","ListGroup","Editor","useMonaco","toast","CopyToClipboard","FaPlus","FaPlayCircle","FaCheckCircle","FaTimesCircle","FaCopy","jsxDEV","_jsxDEV","SnippetPage","theme","_s","id","snippet","setSnippet","loading","setLoading","error","setError","editorRef","monaco","analysis","setAnalysis","isAnalyzing","setIsAnalyzing","fetchSnippet","response","get","data","err","_err$response","_err$response$data","message","handleEditorDidMount","editor","_theMonacoInstance","current","processMarkers","markers","isPython","severityError","MarkerSeverity","Error","length","type","formattedSuggestions","map","marker","_marker$start","customSuggestion","messageText","includes","category","severity","line","startLineNumber","start","suggestion","handleAnalyzeCode","language","model","getModel","modelUri","uri","post","code","content","worker","languages","typescript","getTypeScriptWorker","client","diagnostics","Promise","all","getSyntacticDiagnostics","toString","getSemanticDiagnostics","allDiagnostics","flat","formattedMarkers","diag","startPosition","getPositionAt","lineNumber","Warning","tsError","console","focus","setTimeout","getModelMarkers","resource","onCopyCode","success","fluid","className","children","as","to","variant","fileName","_jsxFileName","columnNumber","Header","Date","createdAt","toLocaleString","Body","height","value","onMount","options","readOnly","domReadOnly","minimap","enabled","validate","Footer","onClick","disabled","animation","size","text","onCopy","_c","$RefreshReg$"],"sources":["C:/Users/RACHEL BRATHAB/Desktop/CodeBinProject/codebin-ui/src/components/SnippetPage.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { Card, Spinner, Alert, Button, Container, ListGroup } from 'react-bootstrap';\r\n// Import useMonaco hook\r\nimport Editor, { useMonaco } from '@monaco-editor/react';\r\nimport { toast } from 'react-hot-toast';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport { FaPlus, FaPlayCircle, FaCheckCircle, FaTimesCircle, FaCopy } from 'react-icons/fa';\r\n\r\nconst SnippetPage = ({ theme }) => {\r\n  const { id } = useParams();\r\n  const [snippet, setSnippet] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n\r\n  const editorRef = useRef(null);\r\n  // Get the monaco instance via hook\r\n  const monaco = useMonaco();\r\n  const [analysis, setAnalysis] = useState([]);\r\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // ... (fetchSnippet logic remains the same)\r\n    const fetchSnippet = async () => {\r\n      try {\r\n        setLoading(true); setError('');\r\n        const response = await axios.get(`http://localhost:5000/api/snippets/${id}`);\r\n        setSnippet(response.data);\r\n      } catch (err) {\r\n        setError(err.response?.data?.message || 'Snippet not found.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchSnippet();\r\n  }, [id]);\r\n\r\n  // Store editor instance when mounted\r\n  function handleEditorDidMount(editor, _theMonacoInstance) {\r\n    editorRef.current = editor;\r\n    // We don't need to store the instance here anymore, useMonaco handles it\r\n  }\r\n\r\n  // --- Helper function to process analysis results ---\r\n  const processMarkers = (markers, isPython = false) => {\r\n    // Check monaco instance before accessing MarkerSeverity\r\n    const severityError = monaco ? monaco.MarkerSeverity.Error : 8; // Default severity if monaco is not ready\r\n\r\n    if (!markers || markers.length === 0) {\r\n      setAnalysis([{ type: 'success', message: 'No errors or warnings found. This code looks clean!' }]);\r\n    } else {\r\n      const formattedSuggestions = markers.map(marker => {\r\n        if (!isPython) {\r\n          // Format Monaco/TypeScript diagnostics\r\n          let customSuggestion = 'Review the error and your code logic.';\r\n          const messageText = typeof marker.messageText === 'string' ? marker.messageText : marker.message || \"\";\r\n\r\n          if (messageText.includes(\"';' expected\")) { /* ... */ }\r\n          if (messageText.includes(\"is not defined\")) { /* ... */ }\r\n          if (messageText.includes(\"Expected corresponding closing tag\")) { /* ... */ }\r\n          if (messageText.includes(\"Cannot assign to\") && messageText.includes(\"constant\")) {\r\n             customSuggestion = `Suggestion: You declared this variable with 'const', which means it cannot be reassigned. Use 'let' instead if you need to change its value.`;\r\n          }\r\n\r\n          return {\r\n            type: (marker.category === 1 || marker.severity === severityError) ? 'danger' : 'warning',\r\n            line: marker.startLineNumber || (marker.start?.line || 0) + 1,\r\n            message: messageText,\r\n            suggestion: customSuggestion\r\n          };\r\n        } else {\r\n          // Format Python errors\r\n          let customSuggestion = `Suggestion: ${marker.message}.`;\r\n          if (marker.message.includes(\"Invalid syntax\")) { /* ... */ }\r\n          return { type: 'danger', line: marker.line, message: marker.message, suggestion: customSuggestion };\r\n        }\r\n      });\r\n      setAnalysis(formattedSuggestions);\r\n    }\r\n    setIsAnalyzing(false);\r\n  };\r\n\r\n  // --- Final Analyze Function ---\r\n  const handleAnalyzeCode = async () => {\r\n    // **CRITICAL FIX**: Check if monaco instance from the hook is ready\r\n    if (!editorRef.current || !monaco) {\r\n      toast.error(\"Editor services are not ready yet. Please wait a moment and try again.\");\r\n      setIsAnalyzing(false); // Make sure button is re-enabled\r\n      return;\r\n    }\r\n\r\n    setIsAnalyzing(true);\r\n    setAnalysis([]);\r\n\r\n    const language = snippet.language;\r\n    const model = editorRef.current.getModel();\r\n    if (!model) { setIsAnalyzing(false); return; }\r\n    const modelUri = model.uri;\r\n\r\n    // --- Python Analysis ---\r\n    if (language === 'python') {\r\n      try {\r\n        const response = await axios.post('http://localhost:5000/api/analyze/python', { code: snippet.content });\r\n        processMarkers(response.data, true);\r\n      } catch (err) {\r\n        setAnalysis([{ type: 'danger', message: 'Error running Python analyzer on server.' }]);\r\n        setIsAnalyzing(false);\r\n      }\r\n    }\r\n    // --- JavaScript/TypeScript Analysis ---\r\n    else if (language === 'javascript' || language === 'typescript') {\r\n      try {\r\n        const worker = await monaco.languages.typescript.getTypeScriptWorker();\r\n        const client = await worker(modelUri);\r\n        const diagnostics = await Promise.all([\r\n          client.getSyntacticDiagnostics(modelUri.toString()),\r\n          client.getSemanticDiagnostics(modelUri.toString())\r\n        ]);\r\n        const allDiagnostics = diagnostics.flat();\r\n\r\n        // Convert TS Diagnostic objects\r\n        const formattedMarkers = allDiagnostics.map(diag => {\r\n            const startPosition = model.getPositionAt(diag.start); // Get line/col from position\r\n            return {\r\n                startLineNumber: startPosition.lineNumber,\r\n                messageText: typeof diag.messageText === 'object'\r\n                             ? diag.messageText.messageText // Handle nested messageText\r\n                             : diag.messageText,\r\n                category: diag.category,\r\n                severity: diag.category === 1 ? monaco.MarkerSeverity.Error : monaco.MarkerSeverity.Warning\r\n            };\r\n        });\r\n        processMarkers(formattedMarkers, false);\r\n\r\n      } catch (tsError) {\r\n          console.error(\"Error getting TS diagnostics:\", tsError);\r\n          // Fallback to getModelMarkers if worker fails\r\n          editorRef.current.focus();\r\n          setTimeout(() => {\r\n              const markers = monaco.editor.getModelMarkers({ resource: modelUri });\r\n              processMarkers(markers, false);\r\n          }, 300);\r\n      }\r\n    }\r\n    // --- Fallback for HTML/CSS/Other ---\r\n    else {\r\n      editorRef.current.focus();\r\n      setTimeout(() => {\r\n        const markers = monaco.editor.getModelMarkers({ resource: modelUri });\r\n        processMarkers(markers, false);\r\n      }, 300);\r\n    }\r\n  };\r\n\r\n  const onCopyCode = () => {\r\n    toast.success('Code copied to clipboard!');\r\n  };\r\n\r\n  // --- Loading and Error states ---\r\n  if (loading) { /* ... return spinner ... */ }\r\n  if (error) { /* ... return error alert ... */ }\r\n\r\n  return (\r\n    <Container fluid className=\"mb-4\">\r\n      {/* ... Buttons ... */}\r\n      <Button as={Link} to=\"/\" variant=\"secondary\" className=\"mb-3\">\r\n        <FaPlus className=\"me-2\" /> Create New Snippet\r\n      </Button>\r\n      {snippet && (\r\n        <Card className=\"editor-card\">\r\n          <Card.Header>\r\n            Language: <strong>{snippet.language}</strong> | Created: {new Date(snippet.createdAt).toLocaleString()}\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <Editor\r\n              height=\"60vh\"\r\n              theme={theme === 'dark' ? 'vs-dark' : 'vs-light'}\r\n              language={snippet.language}\r\n              value={snippet.content}\r\n              onMount={handleEditorDidMount} // Keep this\r\n              options={{\r\n                readOnly: true, domReadOnly: true, minimap: { enabled: true }, validate: true\r\n              }}\r\n            />\r\n          </Card.Body>\r\n          <Card.Footer>\r\n            <div className=\"d-flex align-items-center\">\r\n              {/* Analyze Button */}\r\n              <Button variant=\"success\" onClick={handleAnalyzeCode} className=\"py-2\" disabled={isAnalyzing}>\r\n                 {isAnalyzing ? ( <Spinner as=\"span\" animation=\"border\" size=\"sm\" /> ) : ( <FaPlayCircle className=\"me-2\" /> )} Analyze Code\r\n              </Button>\r\n              {/* Copy Button */}\r\n              <CopyToClipboard text={snippet.content} onCopy={onCopyCode}>\r\n                <Button variant=\"primary\" className=\"ms-2 py-2\"> <FaCopy className=\"me-2\" /> Copy Code </Button>\r\n              </CopyToClipboard>\r\n            </div>\r\n            {/* Analysis Results */}\r\n            {analysis.length > 0 && ( <div className=\"mt-4\"> /* ... ListGroup ... */ </div> )}\r\n          </Card.Footer>\r\n        </Card>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SnippetPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}