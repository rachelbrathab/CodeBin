{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\RACHEL BRATHAB\\\\Desktop\\\\CodeBinProject\\\\codebin-ui\\\\src\\\\components\\\\SnippetPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport axios from 'axios';\nimport { Card, Spinner, Alert, Button, Container, ListGroup } from 'react-bootstrap';\nimport Editor from '@monaco-editor/react';\n\n// 1. Import the new 'CopyToClipboard' component and icons\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { FaPlus, FaPlayCircle, FaCheckCircle, FaTimesCircle, FaCopy, FaCheck } from 'react-icons/fa';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SnippetPage = ({\n  theme\n}) => {\n  _s();\n  // ... (all your existing state is unchanged)\n  const {\n    id\n  } = useParams();\n  const [snippet, setSnippet] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const editorRef = useRef(null);\n  const monacoRef = useRef(null);\n  const [analysis, setAnalysis] = useState([]);\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\n\n  // 2. Add new state to track if code has been copied\n  const [isCopied, setIsCopied] = useState(false);\n\n  // ... (useEffect, handleEditorDidMount, processMarkers, handleAnalyzeCode are all unchanged)\n  useEffect(() => {\n    const fetchSnippet = async () => {\n      try {\n        setLoading(true);\n        setError('');\n        const response = await axios.get(`http://localhost:5000/api/snippets/${id}`);\n        setSnippet(response.data);\n      } catch (err) {\n        var _err$response, _err$response$data;\n        setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Snippet not found.');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchSnippet();\n  }, [id]);\n  function handleEditorDidMount(editor, monaco) {\n    editorRef.current = editor;\n    monacoRef.current = monaco;\n  }\n  const processMarkers = markers => {\n    const monaco = monacoRef.current;\n    if (markers.length === 0) {\n      setAnalysis([{\n        type: 'success',\n        message: 'No errors or warnings found. This code looks clean!'\n      }]);\n    } else {\n      const formattedSuggestions = markers.map(marker => {\n        let customSuggestion = 'Review the error and your code logic.';\n        if (marker.message.includes(\"';' expected\")) {\n          customSuggestion = `Suggestion: Try adding a semicolon ';' at the end of line ${marker.startLineNumber - 1}.`;\n        }\n        if (marker.message.includes(\"is not defined\")) {\n          customSuggestion = `Suggestion: Make sure the variable or function \"${marker.message.split(\"'\")[1]}\" is defined, imported, and spelled correctly.`;\n        }\n        if (marker.message.includes(\"Unterminated string constant\")) {\n          customSuggestion = `Suggestion: Look for a missing closing quote (' or \") on line ${marker.startLineNumber}.`;\n        }\n        if (marker.message.includes(\"Expected closing tag\")) {\n          const tagName = marker.message.split(\"'\")[1];\n          customSuggestion = `Suggestion: The <${tagName}> tag on line ${marker.startLineNumber} is not closed. Try adding a </${tagName}> tag.`;\n        }\n        return {\n          type: marker.severity === monaco.MarkerSeverity.Error ? 'danger' : 'warning',\n          line: marker.startLineNumber,\n          message: marker.message,\n          suggestion: customSuggestion\n        };\n      });\n      setAnalysis(formattedSuggestions);\n    }\n    setIsAnalyzing(false);\n  };\n  const handleAnalyzeCode = () => {\n    if (!editorRef.current || !monacoRef.current) return;\n    setIsAnalyzing(true);\n    setAnalysis([]);\n    const monaco = monacoRef.current;\n    const model = editorRef.current.getModel();\n    editorRef.current.focus();\n    let attempts = 0;\n    const maxAttempts = 10;\n    const pollInterval = 300;\n    const pollForMarkers = () => {\n      const markers = monaco.editor.getModelMarkers({\n        resource: model.uri\n      });\n      if (markers.length > 0 || attempts >= maxAttempts) {\n        processMarkers(markers);\n      } else {\n        attempts++;\n        setTimeout(pollForMarkers, pollInterval);\n      }\n    };\n    pollForMarkers();\n  };\n\n  // 3. New function for when copy button is clicked\n  const onCopyCode = () => {\n    setIsCopied(true);\n    // Reset the \"Copied!\" text after 2 seconds\n    setTimeout(() => setIsCopied(false), 2000);\n  };\n\n  // ... (Loading and Error states are unchanged)\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      className: \"text-center mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading Snippet...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      className: \"mt-5\",\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"danger\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 47\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          as: Link,\n          to: \"/\",\n          variant: \"danger\",\n          children: \"Go Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 61\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    className: \"mb-4\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      as: Link,\n      to: \"/\",\n      variant: \"secondary\",\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(FaPlus, {\n        className: \"me-2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), \"Create New Snippet\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), snippet && /*#__PURE__*/_jsxDEV(Card, {\n      className: \"editor-card\",\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: [\"Language: \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: snippet.language\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 23\n        }, this), \" | Created: \", new Date(snippet.createdAt).toLocaleString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: /*#__PURE__*/_jsxDEV(Editor\n        // ... (Editor props are unchanged)\n        , {\n          height: \"60vh\",\n          theme: theme === 'dark' ? 'vs-dark' : 'vs-light',\n          language: snippet.language,\n          value: snippet.content,\n          onMount: handleEditorDidMount,\n          options: {\n            readOnly: true,\n            domReadOnly: true,\n            minimap: {\n              enabled: true\n            },\n            validate: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex align-items-center\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"success\",\n            onClick: handleAnalyzeCode,\n            className: \"py-2\",\n            disabled: isAnalyzing,\n            children: isAnalyzing ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Spinner, {\n                as: \"span\",\n                animation: \"border\",\n                size: \"sm\",\n                role: \"status\",\n                \"aria-hidden\": \"true\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ms-2\",\n                children: \"Analyzing...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(FaPlayCircle, {\n                className: \"me-2\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 21\n              }, this), \"Analyze Code\"]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CopyToClipboard, {\n            text: snippet.content,\n            onCopy: onCopyCode,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"primary\",\n              className: \"ms-2 py-2\",\n              children: isCopied ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(FaCheck, {\n                  className: \"me-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 23\n                }, this), \" Copied!\"]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(FaCopy, {\n                  className: \"me-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 23\n                }, this), \" Copy Code\"]\n              }, void 0, true)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 13\n        }, this), analysis.length > 0 &&\n        /*#__PURE__*/\n        // ... (Analysis results section is unchanged)\n        _jsxDEV(\"div\", {\n          className: \"mt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Analysis Results:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n            className: \"analysis-list\",\n            children: analysis.map((item, index) => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              className: theme === 'light' ? 'bg-light text-dark' : 'bg-dark text-light',\n              children: item.type === 'success' ? /*#__PURE__*/_jsxDEV(\"strong\", {\n                className: \"text-success\",\n                children: [/*#__PURE__*/_jsxDEV(FaCheckCircle, {\n                  className: \"me-2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 58\n                }, this), item.message]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 25\n              }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  className: item.type === 'danger' ? 'text-danger' : 'text-warning',\n                  children: [/*#__PURE__*/_jsxDEV(FaTimesCircle, {\n                    className: \"me-2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 203,\n                    columnNumber: 29\n                  }, this), \" Line \", item.line, \":\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 27\n                }, this), \" \", item.message, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 27\n                }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: item.suggestion\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n};\n_s(SnippetPage, \"g1OJbXFmGTloIWgik6efycyfUUQ=\", false, function () {\n  return [useParams];\n});\n_c = SnippetPage;\nexport default SnippetPage;\nvar _c;\n$RefreshReg$(_c, \"SnippetPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useParams","Link","axios","Card","Spinner","Alert","Button","Container","ListGroup","Editor","CopyToClipboard","FaPlus","FaPlayCircle","FaCheckCircle","FaTimesCircle","FaCopy","FaCheck","jsxDEV","_jsxDEV","Fragment","_Fragment","SnippetPage","theme","_s","id","snippet","setSnippet","loading","setLoading","error","setError","editorRef","monacoRef","analysis","setAnalysis","isAnalyzing","setIsAnalyzing","isCopied","setIsCopied","fetchSnippet","response","get","data","err","_err$response","_err$response$data","message","handleEditorDidMount","editor","monaco","current","processMarkers","markers","length","type","formattedSuggestions","map","marker","customSuggestion","includes","startLineNumber","split","tagName","severity","MarkerSeverity","Error","line","suggestion","handleAnalyzeCode","model","getModel","focus","attempts","maxAttempts","pollInterval","pollForMarkers","getModelMarkers","resource","uri","setTimeout","onCopyCode","className","children","animation","fileName","_jsxFileName","lineNumber","columnNumber","variant","as","to","fluid","Header","language","Date","createdAt","toLocaleString","Body","height","value","content","onMount","options","readOnly","domReadOnly","minimap","enabled","validate","Footer","onClick","disabled","size","role","text","onCopy","item","index","Item","_c","$RefreshReg$"],"sources":["C:/Users/RACHEL BRATHAB/Desktop/CodeBinProject/codebin-ui/src/components/SnippetPage.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useParams, Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { Card, Spinner, Alert, Button, Container, ListGroup } from 'react-bootstrap';\r\nimport Editor from '@monaco-editor/react';\r\n\r\n// 1. Import the new 'CopyToClipboard' component and icons\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport { FaPlus, FaPlayCircle, FaCheckCircle, FaTimesCircle, FaCopy, FaCheck } from 'react-icons/fa';\r\n\r\nconst SnippetPage = ({ theme }) => {\r\n  // ... (all your existing state is unchanged)\r\n  const { id } = useParams();\r\n  const [snippet, setSnippet] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const editorRef = useRef(null);\r\n  const monacoRef = useRef(null);\r\n  const [analysis, setAnalysis] = useState([]);\r\n  const [isAnalyzing, setIsAnalyzing] = useState(false);\r\n\r\n  // 2. Add new state to track if code has been copied\r\n  const [isCopied, setIsCopied] = useState(false);\r\n\r\n  // ... (useEffect, handleEditorDidMount, processMarkers, handleAnalyzeCode are all unchanged)\r\n  useEffect(() => {\r\n    const fetchSnippet = async () => {\r\n      try {\r\n        setLoading(true);\r\n        setError('');\r\n        const response = await axios.get(`http://localhost:5000/api/snippets/${id}`);\r\n        setSnippet(response.data);\r\n      } catch (err) {\r\n        setError(err.response?.data?.message || 'Snippet not found.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchSnippet();\r\n  }, [id]);\r\n\r\n  function handleEditorDidMount(editor, monaco) {\r\n    editorRef.current = editor;\r\n    monacoRef.current = monaco;\r\n  }\r\n  const processMarkers = (markers) => {\r\n    const monaco = monacoRef.current;\r\n    if (markers.length === 0) {\r\n      setAnalysis([{ \r\n        type: 'success', \r\n        message: 'No errors or warnings found. This code looks clean!' \r\n      }]);\r\n    } else {\r\n      const formattedSuggestions = markers.map(marker => {\r\n        let customSuggestion = 'Review the error and your code logic.';\r\n        if (marker.message.includes(\"';' expected\")) {\r\n          customSuggestion = `Suggestion: Try adding a semicolon ';' at the end of line ${marker.startLineNumber - 1}.`;\r\n        }\r\n        if (marker.message.includes(\"is not defined\")) {\r\n          customSuggestion = `Suggestion: Make sure the variable or function \"${marker.message.split(\"'\")[1]}\" is defined, imported, and spelled correctly.`;\r\n        }\r\n        if (marker.message.includes(\"Unterminated string constant\")) {\r\n          customSuggestion = `Suggestion: Look for a missing closing quote (' or \") on line ${marker.startLineNumber}.`;\r\n        }\r\n        if (marker.message.includes(\"Expected closing tag\")) {\r\n          const tagName = marker.message.split(\"'\")[1];\r\n          customSuggestion = `Suggestion: The <${tagName}> tag on line ${marker.startLineNumber} is not closed. Try adding a </${tagName}> tag.`;\r\n        }\r\n        return {\r\n          type: marker.severity === monaco.MarkerSeverity.Error ? 'danger' : 'warning',\r\n          line: marker.startLineNumber,\r\n          message: marker.message,\r\n          suggestion: customSuggestion\r\n        };\r\n      });\r\n      setAnalysis(formattedSuggestions);\r\n    }\r\n    setIsAnalyzing(false);\r\n  };\r\n  const handleAnalyzeCode = () => {\r\n    if (!editorRef.current || !monacoRef.current) return;\r\n    setIsAnalyzing(true);\r\n    setAnalysis([]);\r\n    const monaco = monacoRef.current;\r\n    const model = editorRef.current.getModel();\r\n    editorRef.current.focus();\r\n    let attempts = 0;\r\n    const maxAttempts = 10;\r\n    const pollInterval = 300; \r\n    const pollForMarkers = () => {\r\n      const markers = monaco.editor.getModelMarkers({ resource: model.uri });\r\n      if (markers.length > 0 || attempts >= maxAttempts) {\r\n        processMarkers(markers);\r\n      } else {\r\n        attempts++;\r\n        setTimeout(pollForMarkers, pollInterval);\r\n      }\r\n    };\r\n    pollForMarkers();\r\n  };\r\n\r\n  // 3. New function for when copy button is clicked\r\n  const onCopyCode = () => {\r\n    setIsCopied(true);\r\n    // Reset the \"Copied!\" text after 2 seconds\r\n    setTimeout(() => setIsCopied(false), 2000);\r\n  };\r\n\r\n  // ... (Loading and Error states are unchanged)\r\n  if (loading) {\r\n    return (\r\n      <Container className=\"text-center mt-5\">\r\n        <Spinner animation=\"border\" />\r\n        <p>Loading Snippet...</p>\r\n      </Container>\r\n    );\r\n  }\r\n  if (error) {\r\n    return (\r\n      <Container className=\"mt-5\">\r\n        <Alert variant=\"danger\"><h4>Error</h4><p>{error}</p><Button as={Link} to=\"/\" variant=\"danger\">Go Home</Button></Alert>\r\n      </Container>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Container fluid className=\"mb-4\">\r\n      <Button as={Link} to=\"/\" variant=\"secondary\" className=\"mb-3\">\r\n        <FaPlus className=\"me-2\" />\r\n        Create New Snippet\r\n      </Button>\r\n\r\n      {snippet && (\r\n        <Card className=\"editor-card\">\r\n          <Card.Header>\r\n            Language: <strong>{snippet.language}</strong> | Created: {new Date(snippet.createdAt).toLocaleString()}\r\n          </Card.Header>\r\n          <Card.Body>\r\n            <Editor\r\n              // ... (Editor props are unchanged)\r\n              height=\"60vh\"\r\n              theme={theme === 'dark' ? 'vs-dark' : 'vs-light'}\r\n              language={snippet.language}\r\n              value={snippet.content}\r\n              onMount={handleEditorDidMount}\r\n              options={{\r\n                readOnly: true,\r\n                domReadOnly: true,\r\n                minimap: { enabled: true },\r\n                validate: true \r\n              }}\r\n            />\r\n          </Card.Body>\r\n\r\n          <Card.Footer>\r\n            {/* 4. Add the buttons to a container for spacing */}\r\n            <div className=\"d-flex align-items-center\">\r\n              <Button variant=\"success\" onClick={handleAnalyzeCode} className=\"py-2\" disabled={isAnalyzing}>\r\n                {isAnalyzing ? (\r\n                  <>\r\n                    <Spinner as=\"span\" animation=\"border\" size=\"sm\" role=\"status\" aria-hidden=\"true\" />\r\n                    <span className=\"ms-2\">Analyzing...</span>\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    <FaPlayCircle className=\"me-2\" />\r\n                    Analyze Code\r\n                  </>\r\n                )}\r\n              </Button>\r\n\r\n              {/* 5. THIS IS THE NEW COPY BUTTON */}\r\n              <CopyToClipboard text={snippet.content} onCopy={onCopyCode}>\r\n                <Button variant=\"primary\" className=\"ms-2 py-2\">\r\n                  {isCopied ? (\r\n                    <>\r\n                      <FaCheck className=\"me-2\" /> Copied!\r\n                    </>\r\n                  ) : (\r\n                    <>\r\n                      <FaCopy className=\"me-2\" /> Copy Code\r\n                    </>\r\n                  )}\r\n                </Button>\r\n              </CopyToClipboard>\r\n            </div>\r\n\r\n            {analysis.length > 0 && (\r\n              // ... (Analysis results section is unchanged)\r\n              <div className=\"mt-4\">\r\n                <h4>Analysis Results:</h4>\r\n                <ListGroup className=\"analysis-list\">\r\n                  {analysis.map((item, index) => (\r\n                    <ListGroup.Item \r\n                      key={index} \r\n                      className={theme === 'light' ? 'bg-light text-dark' : 'bg-dark text-light'}\r\n                    >\r\n                      {item.type === 'success' ? (\r\n                        <strong className=\"text-success\"><FaCheckCircle className=\"me-2\" />{item.message}</strong>\r\n                      ) : (\r\n                        <>\r\n                          <strong className={item.type === 'danger' ? 'text-danger' : 'text-warning'}>\r\n                            <FaTimesCircle className=\"me-2\" /> Line {item.line}:\r\n                          </strong> {item.message}\r\n                          <br />\r\n                          <small>{item.suggestion}</small>\r\n                        </>\r\n                      )}\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              </div>\r\n            )}\r\n          </Card.Footer>\r\n        </Card>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SnippetPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}